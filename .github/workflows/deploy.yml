name: Deploy API and Frontend

on:
  push:
    branches: ["master"]
jobs:
  buildFrontend:
    runs-on: ubuntu-latest
    name: Build frontend
    steps:
      - uses: actions/checkout@master
      - name: Remove proxy from package.json
        run: echo "`jq 'del(.proxy)' Frontend/package.json`" > Frontend/package.json
      - name: Read package.json
        run: cat Frontend/package.json
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: Frontend/package-lock.json
      - run: |
          cd Frontend
          npm install
          npm run build
        name: Build frontend artifact
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: Frontend/build

  buildApi:
    runs-on: ubuntu-latest
    name: Build API
    steps:
      - uses: actions/checkout@master
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"
      - name: Install dependencies
        run: dotnet restore
      - name: Build API artifact
        run: dotnet publish Infrastructure/*.csproj --configuration Release -o api
      - name: Upload API artifact
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: api

  deployInfrastructure:
    runs-on: ubuntu-latest
    name: Deploy Infrastructure
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@master
      - name: Azure Login
        uses: Azure/login@v1.4.6
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}
      - name: Run template deployment
        id: template
        uses: azure/arm-deploy@v1.0.9
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
          template: ./Bicep/master.bicep

  deployApp:
    runs-on: ubuntu-latest
    name: Deploy application
    permissions:
      contents: "read"
      id-token: "write"
    needs: [deployInfrastructure, buildApi, buildFrontend]
    steps:
      - name: Download API artifact
        uses: actions/download-artifact@v2
        with:
          name: api
          path: api
      - name: Download frontend artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: ./
      - name: Azure Login
        uses: Azure/login@v1.4.6
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2.2.6
        with:
          app-name: webapp-raeugww74vfps
          package: ./
          slot-name: "staging"
