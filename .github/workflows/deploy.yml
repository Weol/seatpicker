name: Deploy API and Frontend

on:
  push:
    branches: ["terraform"]
jobs:
  buildFrontend:
    runs-on: ubuntu-latest
    name: Build frontend
    steps:
      - uses: actions/checkout@master
      - name: Remove proxy from package.json
        run: echo "`jq 'del(.proxy)' Frontend/package.json`" > Frontend/package.json
      - name: Read package.json
        run: cat Frontend/package.json
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: Frontend/package-lock.json
      - run: |
          cd Frontend
          npm install
          npm run build
        name: Build frontend artifact
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: Frontend/build

  buildApi:
    runs-on: ubuntu-latest
    name: Build API
    steps:
      - uses: actions/checkout@master
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"
      - name: Install dependencies
        run: dotnet restore
      - name: Build API artifact
        run: dotnet publish Infrastructure/*.csproj --configuration Release -o api
      - name: Upload API artifact
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: api

  deployInfrastructure:
    runs-on: ubuntu-latest
    name: Deploy Infrastructure
    environment: Production
    permissions:
      contents: "read"
      id-token: "write"
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_USE_OIDC: true
    steps:
      - uses: actions/checkout@master
        with:
          path: seatpicker
      - name: Copy Terraform folder
        run: cp -a seatpicker/Terraform/. ./
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform init -upgrade
      - name: Terraform Plan
        id: tf-plan
        run: |
          export exitcode=0

          terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?

          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else 
            exit 0
          fi
      - name: Create String Output
        id: tf-plan-string
        run: |
          TERRAFORM_PLAN=$(terraform show -no-color tfplan)

          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT
      - name: Terraform Apply
        if: steps.tf-plan.outputs.tfplanExitCode == 2
        run: |
          terraform apply -auto-approve tfplan \
            -var="azure_tenant_id=${{ secrets.TENANT_ID }}" \
            -var="azure_client_id=${{ secrets.CLIENT_ID }}"

  deployApp:
    runs-on: ubuntu-latest
    name: Deploy application
    permissions:
      contents: "read"
      id-token: "write"
    needs: [deployInfrastructure, buildApi, buildFrontend]
    steps:
      - name: Download API artifact
        uses: actions/download-artifact@v2
        with:
          name: api
          path: api
      - name: Download frontend artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: ./
      - name: Azure Login
        uses: Azure/login@v1.4.6
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2.2.6
        with:
          app-name: webapp-raeugww74vfps
          package: ./
          slot: staging
